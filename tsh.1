.\" Process this file with
.\" groff -man -Tascii tsh.1
.\"
.TH TSH 1 "OCTOBER 2012" "NU EECS 343" "NU EECS 343 - Operating Systems - Fall 2012"
.SH NAME
tsh \- A tiny shell
.SH SYNOPSIS
.B tsh
.SH DESCRIPTION
.B tsh
tsh is a simplified UNIX C shell. It takes in command lines from either user interaction, or a shell script, and interpret them. If the command is built-in, tsh will execute it. If the command is external, tsh will try to find the command in $PATH or a given full path and execute it, and if it is not found, tsh will report the situation. tsh also handles interrupts.
.SH BUILT-IN COMMANDS
.IP exit
Quit tsh
.IP cd
Go to the directory specified by the argument, or go to the current user's home directory if there is no argument
.IP VAR=value
Set environment value
.SH DESIGN APPROACH
When the shell starts, the environment variable $PS1 is printed as a prompt for each command. Also upon start, tsh tries to read a .tshrc file and handle the command lines in there (function runtshrc() in tsh.c). Then, tsh gets command lines from user interaction or a shell script and handle them (function main() in tsh.c calls function Interpret() in interpreter.c). It took me a while to figure out what the script command does, and how it is related to the .tshrc file.
To handle a command line, after reading it in, tsh determines whether it is built-in or external (function IsBuiltIn() in runtime.c). For built-in command, tsh implements it directly (function RunBuiltInCmd() in runtime.c). For external command, tsh tries to find it in the given full path or $PATH (function findCommand() in runtime.c), and execute it by forking a child process (function RunExternalCmd() in runtime.c). Implementing all those fuctions requires careful consideration of every detail and corner case, which took some testing and debugging.
After a command is handled, it gets freed (function freeCommand() in interpreter.c).
Interrupts are handled by function sig() in tsh.c.
All four extra credit cases are implemented and they all pass the test.
.SH AUTHOR
Feng Lu, netId "flu566", fenglu2014@u.northwestern.edu
